import React, { Fragment, useState, useEffect } from "react";
import PropTypes from "prop-types";
import { connect } from "react-redux";
import { Link, withRouter } from "react-router-dom";

import { createProfile, getCurrentProfile } from "../../actions/profile";
import { useStorage } from "../../hooks/useStorage";
import ProgressBar from "../layouts/ProgressBar";

const initialState = {
    company: "",
    website: "",
    location: "",
    status: "",
    skills: "",
    githubusername: "",
    bio: "",
    twitter: "",
    facebook: "",
    linkedin: "",
    youtube: "",
    instagram: "",
};

const CreateOrUpdateProfile = ({
    profile: { profile, loading },
    createProfile,
    getCurrentProfile,
    history,
}) => {
    const [file, setFile] = useState(null);

    const [formData, setFormData] = useState(initialState);

    const [showSocialInputs, toggleSocialInputs] = useState(false);

    const { url, progress } = useStorage(file);

    useEffect(() => {
        if (!profile) getCurrentProfile();

        if (!loading && profile) {
            const profileData = { ...initialState };

            // loading data from profile state to profileData variable
            // excluding the "_id" key generated by mongoDB
            for (const key in profile) {
                if (key in profileData) profileData[key] = profile[key];
            }

            for (const key in profile.social) {
                if (key in profileData) profileData[key] = profile.social[key];
            }

            // joining the array elements to "," separated string
            if (Array.isArray(profileData.skills))
                profileData.skills = profileData.skills.join(", ");

            // presetting the form values
            setFormData(profileData);
        }
    }, [loading, getCurrentProfile, profile, url]);

    const {
        company,
        website,
        location,
        status,
        skills,
        githubusername,
        bio,
        twitter,
        facebook,
        linkedin,
        youtube,
        instagram,
    } = formData;

    const types = ["image/png", "image/jpeg", "image/jpg"];

    const selectAvatar = (event) => {
        let selectedFile = event.target.files[0];

        if (selectedFile) {
            if (types.includes(selectedFile.type)) {
                setFile(selectedFile);
            } else {
                setFile(null);
            }
        }
    };

    // for email -> {prevData, email: value}
    // for password -> {prevData, password: value}
    const onChange = (event) =>
        setFormData({ ...formData, [event.target.name]: event.target.value });

    const onSubmit = (event) => {
        event.preventDefault();

        let submitFormData;
        url
            ? (submitFormData = { ...formData, avatar: url })
            : (submitFormData = formData);

        createProfile(submitFormData, history, profile !== null ? true : false);
    };

    return (
        <Fragment>
            <Link className="btn btn-light mb" to="/dashboard">
                Go Back
            </Link>
            <h1 className="large text-primary">
                {profile !== null ? "Edit" : "Create"} Your Profile
            </h1>
            <p className="lead">
                <i className="fas fa-user"></i> &nbsp;Let's get some information
                to make your profile stand out
            </p>

            <div className="mb avatar-edit-cont">
                <label className="avatar-input btn btn-white">
                    <input type="file" onChange={selectAvatar} />
                    <span>Change Profile Photo</span>
                </label>
                {file && +progress < 100 && <ProgressBar progress={progress} />}
                {file && +progress === 100 && (
                    <div className="file-name">
                        <p>{file.name}</p>
                    </div>
                )}

                {/* <a
                    href="https://en.gravatar.com/site/login"
                    target="_blank"
                    rel="noopener nore ferrer"
                    className="btn btn-white"
                >
                    Edit Gravatar Image
                </a>{" "}
                <small>
                    &nbsp;* Update the image of the Gravatar account with the
                    same email as your devConnect account's email
                </small> */}
            </div>
            <small>* = required field</small>
            <form className="form" onSubmit={(e) => onSubmit(e)}>
                <div className="form-group">
                    <select
                        name="status"
                        value={status}
                        onChange={(e) => onChange(e)}
                    >
                        <option value="0">* Select Professional Status</option>
                        <option value="Developer">Developer</option>
                        <option value="Junior Developer">
                            Junior Developer
                        </option>
                        <option value="Senior Developer">
                            Senior Developer
                        </option>
                        <option value="Manager">Manager</option>
                        <option value="Student or Learning">
                            Student or Learning
                        </option>
                        <option value="Instructor">
                            Instructor or Teacher
                        </option>
                        <option value="Intern">Intern</option>
                        <option value="Other">Other</option>
                    </select>
                    <small className="form-text">
                        Give us an idea of where you are at in your career
                    </small>
                </div>
                <div className="form-group">
                    <input
                        type="text"
                        placeholder="Company"
                        name="company"
                        value={company}
                        onChange={(e) => onChange(e)}
                    />
                    <small className="form-text">
                        Could be your own company or one you work for
                    </small>
                </div>
                <div className="form-group">
                    <input
                        type="text"
                        placeholder="Website"
                        name="website"
                        value={website}
                        onChange={(e) => onChange(e)}
                    />
                    <small className="form-text">
                        Could be your own or a company website
                    </small>
                </div>
                <div className="form-group">
                    <input
                        type="text"
                        placeholder="Location"
                        name="location"
                        value={location}
                        onChange={(e) => onChange(e)}
                    />
                    <small className="form-text">
                        City & state suggested (eg. Kolkata, India)
                    </small>
                </div>
                <div className="form-group">
                    <input
                        type="text"
                        placeholder="* Skills"
                        name="skills"
                        value={skills}
                        onChange={(e) => onChange(e)}
                    />
                    <small className="form-text">
                        Please use comma separated values (eg. HTML, CSS,
                        JavaScript, Python)
                    </small>
                </div>
                <div className="form-group">
                    <input
                        type="text"
                        placeholder="Github Username"
                        name="githubusername"
                        value={githubusername}
                        onChange={(e) => onChange(e)}
                    />
                    <small className="form-text">
                        If you want your latest repos and a Github link, include
                        your username
                    </small>
                </div>
                <div className="form-group">
                    <textarea
                        placeholder="A short bio of yourself"
                        name="bio"
                        value={bio}
                        onChange={(e) => onChange(e)}
                    ></textarea>
                    <small className="form-text">
                        Tell us a little about yourself
                    </small>
                </div>

                <div className="my-2">
                    <button
                        type="button"
                        className="btn btn-light mr"
                        onClick={() => toggleSocialInputs(!showSocialInputs)}
                    >
                        Add Social Network Links
                    </button>
                    <span>Optional</span>
                </div>

                {showSocialInputs && (
                    <Fragment>
                        <div className="form-group social-input">
                            <i className="fab fa-twitter fa-2x"></i>
                            <input
                                type="text"
                                placeholder="Twitter URL"
                                name="twitter"
                                value={twitter}
                                onChange={(e) => onChange(e)}
                            />
                        </div>

                        <div className="form-group social-input">
                            <i className="fab fa-facebook fa-2x"></i>
                            <input
                                type="text"
                                placeholder="Facebook URL"
                                name="facebook"
                                value={facebook}
                                onChange={(e) => onChange(e)}
                            />
                        </div>

                        <div className="form-group social-input">
                            <i className="fab fa-youtube fa-2x"></i>
                            <input
                                type="text"
                                placeholder="YouTube URL"
                                name="youtube"
                                value={youtube}
                                onChange={(e) => onChange(e)}
                            />
                        </div>

                        <div className="form-group social-input">
                            <i className="fab fa-linkedin fa-2x"></i>
                            <input
                                type="text"
                                placeholder="Linkedin URL"
                                name="linkedin"
                                value={linkedin}
                                onChange={(e) => onChange(e)}
                            />
                        </div>

                        <div className="form-group social-input">
                            <i className="fab fa-instagram fa-2x"></i>
                            <input
                                type="text"
                                placeholder="Instagram URL"
                                name="instagram"
                                value={instagram}
                                onChange={(e) => onChange(e)}
                            />
                        </div>
                    </Fragment>
                )}

                <input type="submit" className="btn btn-primary my-1" />
            </form>
        </Fragment>
    );
};

CreateOrUpdateProfile.propTypes = {
    profile: PropTypes.object.isRequired,
    createProfile: PropTypes.func.isRequired,
    getCurrentProfile: PropTypes.func.isRequired,
};

const mapStateToProps = (state) => ({
    profile: state.profile,
});

export default connect(mapStateToProps, { createProfile, getCurrentProfile })(
    withRouter(CreateOrUpdateProfile)
);
